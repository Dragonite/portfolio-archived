{"version":3,"sources":["contexts/theme.js","portfolio.js","components/Navbar/Navbar.js","components/Header/Header.js","components/About/About.js","components/ProjectContainer/ProjectContainer.js","components/Projects/Projects.js","components/Skills/Skills.js","components/ScrollToTop/ScrollToTop.js","components/Contact/Contact.js","components/Footer/Footer.js","App.js","index.js"],"names":["ThemeContext","createContext","ThemeProvider","children","useState","themeName","setThemeName","useEffect","darkMediaQuery","window","matchMedia","matches","addEventListener","e","Provider","value","toggleTheme","name","localStorage","setItem","header","about","linkedin","github","projects","description","stack","image","sourceCode","skills","contact","Navbar","useContext","showNavList","setShowNavList","toggleNavList","className","style","display","length","href","onClick","type","Header","homepage","title","About","role","resume","social","process","ProjectContainer","project","src","alt","map","item","uniqid","livePreview","Projects","id","Skills","skill","ScrollToTop","isVisible","setIsVisible","toggleVisibility","pageYOffset","removeEventListener","fontSize","Contact","Footer","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.659f8a52.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nconst ThemeContext = createContext()\n\nconst ThemeProvider = ({ children }) => {\n  const [themeName, setThemeName] = useState('dark')\n\n  useEffect(() => {\n    const darkMediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n    setThemeName(darkMediaQuery.matches ? 'dark' : 'light')\n    darkMediaQuery.addEventListener('change', (e) => {\n      setThemeName(e.matches ? 'dark' : 'light')\n    });\n  }, [])\n\n  const toggleTheme = () => {\n    const name = themeName === 'dark' ? 'light' : 'dark'\n    localStorage.setItem('themeName', name)\n    setThemeName(name)\n  }\n\n  return (\n    <ThemeContext.Provider value={[{ themeName, toggleTheme }]}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nThemeProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport { ThemeProvider, ThemeContext }\n","const header = {\n  // all the properties are optional - can be left empty or deleted\n  homepage: 'https://www.haolin.dev',\n  title: \"Haolin Wu's Portfolio\",\n}\n\nconst about = {\n  // all the properties are optional - can be left empty or deleted\n  name: 'Haolin',\n  role: 'Full Stack Engineer',\n  description:\n    \"I'm highly motivated and deeply passionate about technology and its future. With my experience in the software development industry, alongside my tertiary teaching experience, I am committed to making an impact in creating change through application of my knowledge and skills.\",\n  resume: 'resume.pdf',\n  social: {\n    linkedin: 'https://www.linkedin.com/in/haolin-wu-222188160/',\n    github: 'https://github.com/dragonite',\n  },\n}\n\nconst projects = [\n  // projects can be added an removed\n  // if there are no projects, Projects section won't show up\n  {\n    name: 'UWA Pharmacy',\n    description:\n      \"A case study website written to manage, create, and teach the University of Western Australia's pharmacy students a variety of scenarios during their placements.\",\n    stack: ['Django', 'Python', 'HTML5', 'SASS', 'Bootstrap'],\n    image: 'case.png',\n    sourceCode: 'https://github.com/320011/case',\n  },\n  {\n    name: 'Whitehat',\n    description:\n      \"A Discord bot and REST API Framework written in both JavaScript and Django for the University of Western Australia's Ethical Hacking Club to manage events and other administrative tasks. Additionally, Whitehat uses API webhooks to deliver event messages through user forms as an alternative to bot messages.\",\n    stack: ['JavaScript', 'Python', 'Webhooks', 'JQuery', 'Django', 'REST API'],\n    sourceCode: 'https://github.com/Dragonite/whitehat',\n    image: 'whitehat.png'\n  },\n  {\n    name: 'Wombat',\n    description:\n      'An algorithm and machine learning model designed to read tabular data and forms, while ingesting data from external sources, while producing machine readable data for visualisation and processing through a web application.',\n    stack: ['Python', 'Tensorflow', 'OCR', 'Table Detection'],\n    image: 'wombat.png'\n  },\n  {\n    name: 'Fishing Tracker',\n    description:\n      'A website built using Flask to record and visualise the most popular fish and their locations within the Perth region, while surveying users on their fishing experiences.',\n    stack: ['Flask', 'Python', 'CSS', 'HTML5'],\n    sourceCode: 'https://github.com/Dragonite/fishing',\n    image: 'fishing.png'\n  },\n  {\n    name: 'Farming Calculator',\n    description:\n      'A Discord bot written in TypeScript to calculate the next breeding tick of an animal within RuneScape, an online MMO. It uses cronjobs to broadcast and send push notifications to a user.',\n    stack: ['cron', 'TypeScript'],\n    sourceCode: 'https://github.com/varrock/anachronia',\n    image: 'farming.png'\n  },\n  {\n    name: 'Macro Builder',\n    description:\n      'A versatile keyboard macro built on top of AutoHotKey and Image Recognition to perform tasks depending on the conditions of screen regions.',\n    stack: ['AHK', 'Image Recognition'],\n    sourceCode: 'https://github.com/Dragonite/imagesearch',\n    image: 'macrobuilder.png'\n  },\n]\n\nconst skills = [\n  'Python',\n  'Django',\n  'Flask',\n  'CI/CD',\n  'TDD',\n  'HTML5',\n  'CSS',\n  'SASS',\n  'JavaScript',\n  'TypeScript',\n  'React',\n  'Redux',\n  'Java',\n  'Swift',\n  'Git',\n  'AWS'\n]\n\nconst contact = {\n  // email is optional - if left empty Contact section won't show up\n  email: 'haolin97@gmail.com',\n}\n\nexport { header, about, projects, skills, contact }\n","import { useContext, useState } from 'react'\nimport Brightness2Icon from '@material-ui/icons/Brightness2'\nimport WbSunnyRoundedIcon from '@material-ui/icons/WbSunnyRounded'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport CloseIcon from '@material-ui/icons/Close'\nimport { ThemeContext } from '../../contexts/theme'\nimport { projects, skills, contact } from '../../portfolio'\nimport './Navbar.css'\n\nconst Navbar = () => {\n  const [{ themeName, toggleTheme }] = useContext(ThemeContext)\n  const [showNavList, setShowNavList] = useState(false)\n\n  const toggleNavList = () => setShowNavList(!showNavList)\n\n  return (\n    <nav className='center nav'>\n      <ul\n        style={{ display: showNavList ? 'flex' : null }}\n        className='nav__list'\n      >\n        {projects.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#projects'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Projects\n            </a>\n          </li>\n        ) : null}\n\n        {skills.length ? (\n          <li className='nav__list-item'>\n            <a\n              href='#skills'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Skills\n            </a>\n          </li>\n        ) : null}\n\n        {contact.email ? (\n          <li className='nav__list-item'>\n            <a\n              href='#contact'\n              onClick={toggleNavList}\n              className='link link--nav'\n            >\n              Contact\n            </a>\n          </li>\n        ) : null}\n      </ul>\n\n      <button\n        type='button'\n        onClick={toggleTheme}\n        className='btn btn--icon nav__theme'\n        aria-label='toggle theme'\n      >\n        {themeName === 'dark' ? <WbSunnyRoundedIcon /> : <Brightness2Icon />}\n      </button>\n\n      <button\n        type='button'\n        onClick={toggleNavList}\n        className='btn btn--icon nav__hamburger'\n        aria-label='toggle navigation'\n      >\n        {showNavList ? <CloseIcon /> : <MenuIcon />}\n      </button>\n    </nav>\n  )\n}\n\nexport default Navbar\n","import { header } from '../../portfolio'\nimport Navbar from '../Navbar/Navbar'\nimport './Header.css'\n\nconst Header = () => {\n  const { homepage, title } = header\n\n  return (\n    <header className='header center'>\n      <h3>\n        {homepage ? (\n          <a href={homepage} className='link'>\n            {title}\n          </a>\n        ) : (\n          title\n        )}\n      </h3>\n      <Navbar />\n    </header>\n  )\n}\n\nexport default Header\n","import GitHubIcon from '@material-ui/icons/GitHub'\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\nimport { about } from '../../portfolio'\nimport './About.css'\n\nconst About = () => {\n  const { name, role, description, resume, social } = about\n\n  return (\n    <div className='about center'>\n      {name && (\n        <h1>\n          Hi, I&apos;m <span className='about__name'>{name}.</span>\n        </h1>\n      )}\n\n      {role && <h2 className='about__role'>{role}</h2>}\n      <p className='about__desc'>{description && description}</p>\n\n      <div className='about__contact center'>\n        {resume && (\n          <a href={`${process.env.PUBLIC_URL}/${resume}`}>\n            <span type='button' className='btn btn--outline'>\n              Resume\n            </span>\n          </a>\n        )}\n\n        {social && (\n          <>\n            {social.github && (\n              <a\n                href={social.github}\n                aria-label='github'\n                className='link link--icon'\n              >\n                <GitHubIcon />\n              </a>\n            )}\n\n            {social.linkedin && (\n              <a\n                href={social.linkedin}\n                aria-label='linkedin'\n                className='link link--icon'\n              >\n                <LinkedInIcon />\n              </a>\n            )}\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default About\n","import uniqid from 'uniqid'\nimport GitHubIcon from '@material-ui/icons/GitHub'\nimport LaunchIcon from '@material-ui/icons/Launch'\nimport './ProjectContainer.css'\n\nconst ProjectContainer = ({ project }) => (\n  <div className='project'>\n    <h3>{project.name}</h3>\n    <img className='project__image' src={`${process.env.PUBLIC_URL}/images/${project.image}`} alt={project.name}/>\n    <p className='project__description'>{project.description}</p>\n    {project.stack && (\n      <ul className='project__stack'>\n        {project.stack.map((item) => (\n          <li key={uniqid()} className='project__stack-item'>\n            {item}\n          </li>\n        ))}\n      </ul>\n    )}\n\n    {project.sourceCode && (\n      <a\n        href={project.sourceCode}\n        aria-label='source code'\n        className='link link--icon'\n      >\n        <GitHubIcon />\n      </a>\n    )}\n\n    {project.livePreview && (\n      <a\n        href={project.livePreview}\n        aria-label='live preview'\n        className='link link--icon'\n      >\n        <LaunchIcon />\n      </a>\n    )}\n  </div>\n)\n\nexport default ProjectContainer\n","import uniqid from 'uniqid'\nimport { projects } from '../../portfolio'\nimport ProjectContainer from '../ProjectContainer/ProjectContainer'\nimport './Projects.css'\n\nconst Projects = () => {\n  if (!projects.length) return null\n\n  return (\n    <section id='projects' className='section projects'>\n      <h2 className='section__title'>Projects</h2>\n\n      <div className='projects__grid'>\n        {projects.map((project) => (\n          <ProjectContainer key={uniqid()} project={project} />\n        ))}\n      </div>\n    </section>\n  )\n}\n\nexport default Projects\n","import uniqid from 'uniqid'\nimport { skills } from '../../portfolio'\nimport './Skills.css'\n\nconst Skills = () => {\n  if (!skills.length) return null\n\n  return (\n    <section className='section skills' id='skills'>\n      <h2 className='section__title'>Skills</h2>\n      <ul className='skills__list'>\n        {skills.map((skill) => (\n          <li key={uniqid()} className='skills__list-item btn btn--plain'>\n            {skill}\n          </li>\n        ))}\n      </ul>\n    </section>\n  )\n}\n\nexport default Skills\n","import React, { useEffect, useState } from 'react'\nimport ArrowUpwardIcon from '@material-ui/icons/ArrowUpward'\nimport './ScrollToTop.css'\n\nconst ScrollToTop = () => {\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const toggleVisibility = () =>\n      window.pageYOffset > 500 ? setIsVisible(true) : setIsVisible(false)\n\n    window.addEventListener('scroll', toggleVisibility)\n    return () => window.removeEventListener('scroll', toggleVisibility)\n  }, [])\n\n  return isVisible ? (\n    <div className='scroll-top'>\n      <a href='#top'>\n        <ArrowUpwardIcon fontSize='large' />\n      </a>\n    </div>\n  ) : null\n}\n\nexport default ScrollToTop\n","import { contact } from '../../portfolio'\nimport './Contact.css'\n\nconst Contact = () => {\n  if (!contact.email) return null\n\n  return (\n    <section className='section contact center' id='contact'>\n      <h2 className='section__title'>Contact</h2>\n      <a href={`mailto:${contact.email}`}>\n        <span type='button' className='btn btn--outline'>\n          Email me\n        </span>\n      </a>\n    </section>\n  )\n}\n\nexport default Contact\n","import './Footer.css'\n\nconst Footer = () => (\n  <footer className='footer'>\n    <a\n      href='https://github.com/dragonite/portfolio'\n      className='link footer__link'\n    >\n      Created By Haolin Wu\n    </a>\n  </footer>\n)\n\nexport default Footer\n","import { useContext } from 'react'\nimport { ThemeContext } from './contexts/theme'\nimport Header from './components/Header/Header'\nimport About from './components/About/About'\nimport Projects from './components/Projects/Projects'\nimport Skills from './components/Skills/Skills'\nimport ScrollToTop from './components/ScrollToTop/ScrollToTop'\nimport Contact from './components/Contact/Contact'\nimport Footer from './components/Footer/Footer'\nimport './App.css'\n\nconst App = () => {\n  const [{ themeName }] = useContext(ThemeContext)\n\n  return (\n    <div id='top' className={`${themeName} app`}>\n      <Header />\n\n      <main>\n        <About />\n        <Projects />\n        <Skills />\n        <Contact />\n      </main>\n\n      <ScrollToTop />\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import { render } from 'react-dom'\nimport App from './App'\nimport { ThemeProvider } from './contexts/theme'\nimport './index.css'\n\nrender(\n  <ThemeProvider>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}